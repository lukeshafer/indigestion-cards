---
import SortTable from '../table/SortTable.astro';
import SortTableHead from '../table/SortTableHead.astro';
import SortTableColumn from '../table/SortTableColumn.astro';
import SortTableBody from '../table/SortTableBody.astro';
import SortTableRow from '../table/SortTableRow.astro';
import SortTableCell from '../table/SortTableCell.astro';
import type { Rarity } from '@core/types';
import DeleteRarityButton from './DeleteRarityButton';
import RarityPreviewButton from './RarityPreviewButton.astro';

interface Props {
	rarities: Array<Rarity>;
}

const { rarities } = Astro.props;
---

<SortTable>
	<SortTableHead>
		<SortTableColumn name="id">Id</SortTableColumn>
		<SortTableColumn name="name" width="30%">Name</SortTableColumn>
		<SortTableColumn name="count" showOnBreakpoint="sm" type="number" startDescending>
			Default Count
		</SortTableColumn>
		<SortTableColumn name="color" showOnBreakpoint="md">Color</SortTableColumn>
		<SortTableColumn name="actions" sort={false}>Actions</SortTableColumn>
	</SortTableHead>
	<SortTableBody>
		{
			rarities.map(({ rarityName, defaultCount, rarityId, frameUrl, rarityColor }) => (
				<SortTableRow>
					<SortTableCell column="id" value={rarityId} />
					<SortTableCell column="name" value={rarityName} />
					<SortTableCell column="count" value={defaultCount} showOnBreakpoint="sm" />
					<SortTableCell column="color" value={rarityColor} showOnBreakpoint="md" />
					<SortTableCell column="actions" value="">
						<div class="grid gap-2">
							<DeleteRarityButton {rarityId} {frameUrl} client:idle />
							<RarityPreviewButton {frameUrl} {rarityColor} />
						</div>
					</SortTableCell>
				</SortTableRow>
			))
		}
	</SortTableBody>
</SortTable>
