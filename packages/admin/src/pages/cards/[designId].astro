---
import Page from '@admin/layouts/Page.astro';
import Card from '@admin/components/cards/Card';
import CardList from '@admin/components/cards/CardList';
import { getCardDesignAndInstancesById } from '@core/lib/design';
import { getRarityRanking, getSiteConfig } from '@core/lib/site-config';
import { LEGACY_CARD_ID, ASSETS, routes } from '@admin/constants';
import AdminOnly from '@admin/components/AdminOnly.astro';
import { PageTitle } from '@admin/components/text';
import AdminDesignStats from '@admin/components/design/AdminDesignStats';
import DesignOverviewTable from '@admin/components/design/DesignOverviewTable';
import DeleteDesignButton from '@admin/components/design/DeleteDesignButton';
import EditDesignForm from '@admin/components/design/EditDesignForm';
import { Heading } from '@admin/components/text';
import { getRarityStatsOverviewFromDesignAndInstances } from '@core/lib/stats';

const designId = Astro.params.designId;

if (!designId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No design id provided');
}

const {
	CardDesigns: [design],
	CardInstances: instances,
} = await getCardDesignAndInstancesById({
	designId,
});

if (!design) {
	return Astro.redirect(`${routes.DESIGNS}?error=Design ${designId} not found`);
}

const siteConfig = await getSiteConfig();
const rarityRanking = getRarityRanking(siteConfig);

const baseRarity = design.bestRarityFound ||
	design.rarityDetails?.find((r) => r.rarityId === LEGACY_CARD_ID) ||
	siteConfig?.baseRarity || {
		rarityId: 'default',
		rarityName: 'Default',
		frameUrl: ASSETS.CARDS.DEFAULT_BASE_RARITY,
		rarityColor: '#fff',
	};

instances.sort((a, b) =>
	+a.totalOfType === +b.totalOfType
		? a.designId !== b.designId
			? a.designId.localeCompare(b.designId)
			: +a.cardNumber - +b.cardNumber
		: +a.totalOfType - +b.totalOfType
);

const rarityStatsArray = getRarityStatsOverviewFromDesignAndInstances(design, instances);
const openedInstances = instances.filter((instance) => instance.openedAt);
---

<Page title={`${design.cardName} - ${design.seasonName}`} class="flex flex-col gap-9">
	<header class="flex flex-col items-center gap-4">
		<PageTitle>{design.cardName}</PageTitle>
		<Card {...design} {...baseRarity} cardNumber={1} totalOfType={1} client:load />
		<section class="mx-auto text-lg">
			<p>
				<b>Season:{' '}</b>
				{design.seasonName}
			</p>
			<p>
				<b>Artist:{' '}</b>
				{design.artist}
			</p>
		</section>
		<AdminOnly>
			<EditDesignForm {...design} client:load />
		</AdminOnly>
	</header>
	<section class="flex flex-col text-center">
		<Heading>Cards Opened</Heading>
		<CardList
			cards={openedInstances}
			showUsernames
			client:load
			sortOnlyBy={['rarest', 'common', 'owner-asc', 'owner-desc']}
			rarityRanking={rarityRanking}
		/>
	</section>
	<AdminOnly>
		<details>
			<summary class="font-heading text-xl">Stats for Admins</summary>
			<p class="font-bold text-red-600">
				This section is only visible to admins: not for stream!
			</p>
			<div class="my-4 flex flex-col gap-8">
				<section class="grid text-lg">
					<Heading>Stats Overview</Heading>
					<DesignOverviewTable {rarityStatsArray} client:load />
				</section>
				<AdminDesignStats {rarityStatsArray} client:load />
			</div>
		</details>
		<DeleteDesignButton {...design} client:load />
	</AdminOnly>
</Page>
