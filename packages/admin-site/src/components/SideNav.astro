---
const currentPage = Astro.url.pathname
const adminLinks = [
	{ href: '/', title: 'Users' },
	{ href: '/design', title: 'Designs' },
	{ href: '/season', title: 'Seasons' },
	{ href: '/rarities', title: 'Rarities' },
]
---

<side-nav>
	<button class="toggle-btn self-end text-lg text-shadow px-4 py-1">{'<'}</button>
	<nav class="pt-8 pb-4 flex flex-col gap-8 text-white overflow-y-scroll h-screen max-h-max">
		<a href="/" title="Home" class="flex flex-col text-center font-display text-white text-shadow">
			<span class="italic text-3xl">indigestion</span>
			<span class="text-2xl -mt-1">card studio</span>
		</a>
		<div class="flex-1 self-center">
			<a
				href="/open-packs"
				title="Open Packs"
				class="open-packs my-10 text-4xl uppercase w-min text-center bg-brand-tertiary px-4 py-2 font-heading font-extrabold rounded-3xl relative text-shadow shine block">
				Open Packs
			</a>
		</div>
		<div class="pb-8">
			<h2 class="text-2xl font-heading text-[#a23791] font-medium my-3 p-1 px-6">Administration</h2>
			{
				adminLinks.map(({ href, title }) =>
					currentPage === href ? (
						<a
							href={href}
							title={title}
							class="text-xl font-heading font-medium block bg-white text-black px-6 py-1 my-1">
							{title}
						</a>
					) : (
						<a
							href={href}
							title={title}
							class="text-xl font-heading font-medium block text-shadow px-6 py-1 my-1 hover:bg-gray-900/20">
							{title}
						</a>
					)
				)
			}
		</div>
	</nav>
</side-nav>

<style>
	side-nav {
		position: relative;
		--width: 16rem;
		--btn-bg: green;
		--position: 0;
	}

	.toggle-btn {
		color: white;
		position: absolute;
		top: 0;
		right: 0;
		z-index: 1;
		background-color: var(--btn-bg);
		font-weight: 900;
		transform: translateX(calc(var(--position) * 20rem));
		scale: 1 1.5;
	}

	nav {
		/* to bottom right */
		background-image: linear-gradient(125deg, var(--color-main), var(--color-secondary));
		transform: translateX(calc(var(--position) * -100%));
		transition: transform 0.3s ease-in-out;
		width: calc((var(--position) * -1 + 1) * 16rem);
	}

	.open-packs:hover {
		transition: scale;
		scale: 1.05;
	}
</style>

<script>
	class SideNav extends HTMLElement {
		constructor() {
			super()
		}

		connectedCallback() {
			const nav = this.querySelector('nav')!
			const toggle = this.querySelector('.toggle-btn')!

			toggle.addEventListener('click', () => {
				nav.style.setProperty(
					'--position',
					nav.style.getPropertyValue('--position') === '0' ? '1' : '0'
				)
			})
		}
	}

	customElements.define('side-nav', SideNav)
</script>
