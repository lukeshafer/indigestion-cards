---
import { getUnmatchedDesignImages } from '@lil-indigestion-cards/core/card'
import { Bucket } from 'sst/node/bucket'
import { routes } from '@/constants'

type UnmatchedImageType = NonNullable<Parameters<typeof getUnmatchedDesignImages>[0]>
interface Props {
	type: UnmatchedImageType
}

const unmatchedImages = await getUnmatchedDesignImages(Astro.props.type)

const entityNames = {
	frame: 'frame drafts',
	cardDesign: 'card design drafts',
	default: 'drafts',
}

const name = entityNames[Astro.props.type ?? 'default']

const urlByType = {
	frame: `${routes.ADMIN.CREATE.RARITY_DETAILS}?bucket=${Bucket.FrameDesigns.bucketName}&key=`,
	cardDesign: `${routes.ADMIN.CREATE.CARD_DESIGN_DETAILS}?bucket=${Bucket.CardDesigns.bucketName}&key=`,
} as const satisfies Record<UnmatchedImageType, string>
---

{
	unmatchedImages.length > 0 ? (
		<div class="bg-red-200 p-8">
			<h2 class="text-xl mb-4">Heads up! There are {name} without details!</h2>
			<ul class="flex flex-wrap gap-4">
				{unmatchedImages.map((image) => (
					<li>
						<a rel="prefetch" href={`${urlByType[image.type]}${image.imageId}`}>
							<img src={image.url} width="300" class="object-contain max-h-64 max-w-64" />
						</a>
					</li>
				))}
			</ul>
		</div>
	) : null
}
