---
import SortTable from '@site/components/table/SortTable.astro';
import type { Preorder, User } from '@core/types';
import SortTableSearchBar from '../table/SortTableSearchBar.astro';
import SortTableColumn from '../table/SortTableColumn.astro';
import SortTableHead from '../table/SortTableHead.astro';
import SortTableBody from '../table/SortTableBody.astro';
import SortTableRow from '../table/SortTableRow.astro';
import SortTableCell from '../table/SortTableCell.astro';
import { routes } from '@site/constants';
import CardsIcon from '../icons/CardsIcon';
import PacksIcon from '../icons/PacksIcon';

interface Props {
	users: User[];
	preorders?: Preorder[];
}

const users = Astro.props.users.map(user => ({
	...user,
	preorders: Astro.props.preorders?.filter(preorder => preorder.userId === user.userId) ?? [],
}));
---

<SortTableSearchBar for="users-table" label="Search users" />
<SortTable id="users-table" search-column="username">
	<SortTableHead>
		<SortTableColumn name="username" width="65%" align="left">Username</SortTableColumn>
		<SortTableColumn name="cardCount" type="number" startDescending>Cards</SortTableColumn>
		<SortTableColumn name="packCount" type="number" startDescending>Packs</SortTableColumn>
	</SortTableHead>
	<SortTableBody>
		{
			users.map(user => (
				<SortTableRow>
					<SortTableCell
						column="username"
						align="left"
						font="title"
						value={user.username}>
						<a
							transition:name={`${user.username}-username`}
							href={`${routes.USERS}/${user.username}`}
							class="hover:underline focus:underline">
							{user.username}
						</a>
					</SortTableCell>
					<SortTableCell column="cardCount" value={user.cardCount}>
						<div
							aria-hidden="true"
							class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 fill-white stroke-white dark:fill-gray-900 dark:stroke-gray-900">
							<CardsIcon class="drop-shadow" size={35} />
						</div>
						<span class="relative rounded-full bg-white/75 p-1 dark:bg-gray-900 dark:font-semibold">
							{user.cardCount}
						</span>
					</SortTableCell>
					<SortTableCell
						column="packCount"
						value={user.packCount + user.preorders.length}>
						<div
							aria-hidden="true"
							class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 fill-white stroke-white dark:fill-gray-900 dark:stroke-gray-900">
							<PacksIcon class="drop-shadow" size={35} />
						</div>
						<span class="relative rounded-full bg-white/75 p-1 dark:bg-gray-900 dark:font-semibold">
							{user.packCount + user.preorders.length}
						</span>
					</SortTableCell>
				</SortTableRow>
			))
		}
	</SortTableBody>
</SortTable>
