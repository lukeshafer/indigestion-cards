---
interface Props {
	url: string;
	id: string;
	label: string;
	class?: string;
	type?: 'submit' | 'delete';
	hiddenProperties?: {
		name: string;
		value: string;
	}[];
	confirm?: boolean;
}

const {
	url,
	id,
	label,
	class: className,
	type = 'submit',
	hiddenProperties = [],
	confirm = false,
} = Astro.props;
---

<post-button>
	<my-form action={url} method="post">
		<form id={id} data-confirm={confirm}>
			{
				hiddenProperties.map(({ name, value }) => (
					<input type="hidden" name={name} value={value} />
				))
			}
			<button
				type="submit"
				class="post-button"
				data-type={type}
				class:list={{
					[className ?? '']: true,
				}}
				id="delete-design">
				{label}
			</button>
		</form>
	</my-form>
</post-button>

<script>
	class PostButton extends HTMLElement {
		constructor() {
			super();
		}

		connectedCallback() {
			const form = this.querySelector('form')!;

			if (form.dataset.confirm !== undefined) {
				form.addEventListener('submit', (e) => {
					const result = confirm('Are you sure?');
					if (!result) e.preventDefault();
				});
			}
		}
	}

	customElements.define('post-button', PostButton);
</script>
