---
import Alert from '@/components/Alert.astro';
import Show from '@/components/Show.astro';
import { deleteAdminUser } from '@lil-indigestion-cards/core/user';

const body = await Astro.request.text();
const userId = new URLSearchParams(body).get('userId');
const username = new URLSearchParams(body).get('username');
const isStreamerStr = new URLSearchParams(body).get('isStreamer');
if (!userId) {
	return new Response('Missing userId', { status: 400 });
}
if (!username) {
	return new Response('Missing username', { status: 400 });
}
if (!isStreamerStr) {
	return new Response('Missing isStreamer', { status: 400 });
}


async function runDelete(fn: (result: Awaited<ReturnType<typeof deleteAdminUser>>) => any) {
	console.log('deleting userId', userId);
	if (!userId || !username || !isStreamerStr) {
		return ;
	}
	const result = await deleteAdminUser({
		userId,
		username,
		isStreamer: isStreamerStr === 'true',
	});

	result.success
		? console.log('deleted userId', userId)
		: console.log('error deleting userId', userId, result.error);

	return fn(result);
}
---

<body>
	<Show when={!userId}>
		<Alert type="error">
			Missing <strong>userId</strong>.
		</Alert>
	</Show>
	<Show when={!username}>
		<Alert type="error">
			Missing <strong>username</strong>.
		</Alert>
	</Show>
	<Show when={!isStreamerStr}>
		<Alert type="error">
			Missing <strong>isStreamer</strong>.
		</Alert>
	</Show>

	<Show when={userId && userId === Astro.locals.session?.properties.userId}>
		<Alert type="error">Cannot delete yourself.</Alert>
	</Show>

	{
		await runDelete((result) =>
			result.success ? (
				<Alert type="success">
					Successfully deleted <strong>{username ?? 'user'}</strong>.
				</Alert>
			) : (
				<Alert type="error">
					Failed to delete <strong>{username ?? 'user'}</strong>.
				</Alert>
			)
		)
	}
</body>
