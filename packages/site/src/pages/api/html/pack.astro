---
import { useAdmin } from '@/session';
import { deleteFirstPackForUser } from '@lil-indigestion-cards/core/card';
import {
	createPackForNoUser,
	givePackToUser,
	packSchema,
	packSchemaWithoutUser,
} from '@lil-indigestion-cards/core/pack';
import { getUserByLogin } from '@lil-indigestion-cards/core/twitch-helpers';

const session = useAdmin(Astro.cookies);
if (!session) return new Response('Unauthorized', { status: 401 });
const method = Astro.request.method.toUpperCase();
const body = await Astro.request.text();
const params = new URLSearchParams(body);
let errorStr = '';
let successStr = '';

if (method === 'POST') {
	const username = params.get('username');
	const rawCount = params.get('count');
	const paramUserId = params.get('userId');
	const packTypeString = params.get('packType');
	if (!username) return { statusCode: 400, body: 'Missing user id or user name' };
	if (!packTypeString) return { statusCode: 400, body: 'Missing pack type' };
	const userId = username ? paramUserId ?? (await getUserByLogin(username))?.id ?? null : null;

	const count = Number(rawCount) || 1;

	try {
		const packTypeUnparsed = JSON.parse(packTypeString);

		if (!username || !userId) {
			const packDetails = packSchemaWithoutUser.parse({
				packCount: count,
				packType: packTypeUnparsed,
			});
			await createPackForNoUser(packDetails);
		} else {
			const packDetails = packSchema.parse({
				packCount: count,
				packType: packTypeUnparsed,
			});
			await givePackToUser(packDetails);
		}
	} catch (error) {
		if (error instanceof Error) return new Response(error.message, { status: 500 });
		return new Response('Unknown error', { status: 500 });
	}

	successStr = `Gave ${count} ${count > 1 ? 'packs' : 'pack'} to ${username}`;
}
if (method === 'DELETE') {
	const userId = params.get('userId');
	const username = params.get('username');
	if (!userId || !username) return new Response('Missing parameters', { status: 400 });
	const result = await deleteFirstPackForUser({ username, userId });
	if (!result) return new Response('Failed to revoke pack', { status: 500 });
	if (!result.success) errorStr = result.error;
	else successStr = `Revoked 1 pack for ${username}`;
}
---

<body>
	{
		errorStr ? (
			<p class="p-4 mb-4 bg-red-200">{errorStr}</p>
		) : (
			<p class="p-4 mb-4 bg-green-200">{successStr}</p>
		)
	}
</body>
