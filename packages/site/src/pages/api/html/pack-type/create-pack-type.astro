---
import Redirect from '@/lib/redirect';
import Alert from '@/components/Alert.astro';
import { createPackType } from '@lil-indigestion-cards/core/card';
import { type Category, getPackTypeContents } from '@/lib/packType';

const params = new URLSearchParams(await Astro.request.text());

const packTypeName = params.get('packTypeName');
const packTypeId = params.get('packTypeId');
const description = params.get('description');
const cardCountPerPack = params.get('cardCountPerPack');
const category = params.get('category') as Category;
const seasonString = params.get('season');
const cardDesigns = params.get('cardDesigns');

const errorList: string[] = [];

if (!packTypeName) errorList.push('Missing packTypeName.');
if (!packTypeId) errorList.push('Missing packTypeId.');
if (!cardCountPerPack || !Number(cardCountPerPack)) errorList.push('Missing cardCountPerPack.');
if (!category) errorList.push('Missing category.');
if (category === 'season' && !seasonString) errorList.push('Missing season.');
if (category === 'custom' && !cardDesigns) errorList.push('Missing cardDesigns.');

let season = undefined;
let designs = undefined;
if (!errorList.length) {
	const contents = getPackTypeContents({ category, season: seasonString, cardDesigns });
	if (!contents.success) errorList.push(contents.error);
	else {
		season = contents.season;
		designs = contents.designs;
	}
}

const result = errorList.length
	? { success: false, error: errorList.join(' ') }
	: await createPackType({
			packTypeName: packTypeName!,
			packTypeId: packTypeId!,
			packTypeDescription: description || undefined,
			cardCount: Number(cardCountPerPack!),
			packTypeCategory: category!,
			seasonId: season?.seasonId,
			seasonName: season?.seasonName,
			designs: designs || undefined,
	  });
---

<body>
	{
		result.success ? (
			<Redirect to="/pack-type" alert="Pack created!" type="success" {Astro} />
		) : (
			<Alert type="error">{result.error}</Alert>
		)
	}
</body>
