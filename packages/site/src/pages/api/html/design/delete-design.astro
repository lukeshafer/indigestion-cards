---
import Alert from '@/components/Alert.astro';
import { AUTH_TOKEN } from '@/constants';
import Redirect from '@/lib/redirect';
import { deleteCardDesignById } from '@lil-indigestion-cards/core/card';
import { Api } from 'sst/node/api';

if (Astro.request.method.toUpperCase() !== 'DELETE') {
	return new Response('Method not allowed', { status: 405 });
}

const params = new URLSearchParams(await Astro.request.text());

const designId = params.get('designId');
const imgUrl = params.get('imgUrl');
const cardName = params.get('cardName');

async function deleteDesign() {
	if (!designId) {
		return { success: false, error: 'Missing design id' };
	}
	if (!imgUrl) {
		return { success: false, error: 'Missing image url' };
	}

	const deleteImageUrl = `${Api.api.url}/delete-card-image`;
	const deleteImageResult = await fetch(deleteImageUrl, {
		method: 'DELETE',
		body: JSON.stringify({ imgUrl }),
		headers: {
			authorization: `Bearer ${Astro.cookies.get(AUTH_TOKEN).value ?? ''}`,
		},
	});

	if (!deleteImageResult.ok) {
		console.error(deleteImageResult);
		return { success: false, error: 'Failed to delete image from S3' };
	}

	const result = await deleteCardDesignById({ designId });
	if (!result || !result.success) {
		return { success: false, error: result.error ?? 'Failed to delete card design' };
	}

	return { success: true };
}

const result = await deleteDesign();
---

<body>
	{
		result.success ? (
			<Redirect
				to="/design"
				alert={`Successfully deleted card ${cardName || designId}`}
				type="success"
				{Astro}
			/>
		) : (
			<Alert type="error">{result.error}</Alert>
		)
	}
</body>
