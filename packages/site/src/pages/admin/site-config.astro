---
import Page from '@/layouts/Page.astro';
import { getAllPackTypes, getAllRarities } from '@lil-indigestion-cards/core/card';
import { getTwitchEvents, getSiteConfig } from '@lil-indigestion-cards/core/site-config';
import { TWITCH_GIFT_SUB_ID } from '@lil-indigestion-cards/core/constants';
import TableSearch from '@/components/TableSearch.astro';
import { api } from '@/constants';
import TwitchEvent from '@/components/site-config/TwitchEvent.astro';
import RefreshTwitchEventsButtonOld from '@/components/site-config/RefreshTwitchEventsButton.astro';
import TwitchLoginButton from '@/components/site-config/TwitchLoginButton.astro';
import SortTable from '@/components/table/SortTable.astro';
import SortTableHead from '@/components/table/SortTableHead.astro';
import SortTableHeading from '@/components/table/SortTableHeading.astro';
import PageHeading from '@/components/text/PageHeading.astro';
import SubHeading from '@/components/text/SubHeading.astro';
import SiteConfigForm from '@/components/site-config/SiteConfigForm';
import RefreshTwitchEventsButton from '@/components/site-config/RefreshTwitchEventsButton';

const [twitchEvents, packTypes, rarities, siteConfig] = await Promise.all([
	getTwitchEvents(),
	getAllPackTypes(),
	getAllRarities(),
	getSiteConfig(),
]);

const baseRarityValue = new URLSearchParams(
	siteConfig?.baseRarity || {
		rarityId: rarities[0].rarityId,
		frameUrl: rarities[0].frameUrl,
	}
).toString();

const giftSubEvent = twitchEvents.data.find(
	(event) =>
		event.eventType === 'channel.subscription.gift' && event.eventId === TWITCH_GIFT_SUB_ID
);

if (!giftSubEvent) {
	throw new Error('Could not find gift sub event');
}

const rewards = twitchEvents.data
	.filter((event) => event.eventType === 'channel.channel_points_custom_reward_redemption.add')
	.sort((a, b) => {
		if (a.packTypeId && !b.packTypeId) return -1;
		if (!a.packTypeId && b.packTypeId) return 1;
		if (a.eventName.toLowerCase() < b.eventName.toLowerCase()) return -1;
		if (a.eventName.toLowerCase() > b.eventName.toLowerCase()) return 1;
		return 0;
	});
---

<Page breadcrumbs={[{ label: 'Config' }]} title="Site Config">
	<header class="flex items-center gap-8">
		<PageHeading>Site Config</PageHeading>
	</header>
	<div class="max-w-2xl mx-auto">
		<SiteConfigForm
			{rarities}
			{packTypes}
			twitchEvents={rewards}
			{giftSubEvent}
			{baseRarityValue}
			client:load
		/>
	</div>
	<RefreshTwitchEventsButton client:load />
	<TwitchLoginButton />
</Page>
