---
import Page from '@/layouts/Page.astro';
import { getAllPackTypes, getAllRarities } from '@lil-indigestion-cards/core/card';
import { getTwitchEvents, getSiteConfig } from '@lil-indigestion-cards/core/site-config';
import { TWITCH_GIFT_SUB_ID } from '@lil-indigestion-cards/core/constants';
import TableSearch from '@/components/TableSearch.astro';
import { api } from '@/constants';
import TwitchEvent from '@/components/site-config/TwitchEvent.astro';
import RefreshTwitchEventsButton from '@/components/site-config/RefreshTwitchEventsButton.astro';
import TwitchLoginButton from '@/components/site-config/TwitchLoginButton.astro';

const [twitchEvents, packTypes, rarities, siteConfig] = await Promise.all([
	getTwitchEvents(),
	getAllPackTypes(),
	getAllRarities(),
	getSiteConfig(),
]);

const baseRarityValue = new URLSearchParams(
	siteConfig.baseRarity || {
		rarityId: rarities[0].rarityId,
		frameUrl: rarities[0].frameUrl,
	}
).toString();

const giftSubEvent = twitchEvents.data.find(
	(event) =>
		event.eventType === 'channel.subscription.gift' && event.eventId === TWITCH_GIFT_SUB_ID
);

const rewards = twitchEvents.data
	.filter((event) => event.eventType === 'channel.channel_points_custom_reward_redemption.add')
	.sort((a, b) => {
		if (a.packTypeId && !b.packTypeId) return -1;
		if (!a.packTypeId && b.packTypeId) return 1;
		if (a.eventName.toLowerCase() < b.eventName.toLowerCase()) return -1;
		if (a.eventName.toLowerCase() > b.eventName.toLowerCase()) return 1;
		return 0;
	});

const giftSubPackType =
	giftSubEvent?.packTypeId && giftSubEvent?.packTypeName
		? {
				packTypeId: giftSubEvent?.packTypeId || '',
				packTypeName: giftSubEvent?.packTypeName || '',
		  }
		: undefined;
---

<Page breadcrumbs={[{ label: 'Home', href: '/' }, { label: 'Config' }]} title="Site Config">
	<form
		x-data="{ isEdited: false }"
		@change="isEdited = true"
		hx-post={api.SAVE_CONFIG}
		hx-swap="none"
		method="post">
		<header class="flex gap-8 items-center">
			<h1 class="page-heading">Site Config</h1>
			<button
				class="post-button h-max w-24"
				id="save-config-btn"
				data-type="submit"
				x-show="isEdited"
				x-cloak>Save</button
			>
		</header>
		<section class="my-4 flex gap-4">
			<h2 class="sub-heading w-max">Base Rarity for Design Previews</h2>
			<select class="my-form-input max-w-xs" name="base-rarity">
				{
					rarities.map(({ rarityId, rarityName, frameUrl }) => {
						const value = new URLSearchParams({ rarityId, frameUrl }).toString();
						return (
							<option value={value} selected={value === baseRarityValue}>
								{rarityName}
							</option>
						);
					})
				}
			</select>
		</section>
		<section>
			<sort-table>
				<header class="page-header">
					<h2 class="sub-heading">Twitch Event Rewards</h2>
					<TableSearch
						id="rewards-search"
						tableId="rewards-table"
						label="Search Rewards"
						searchColumn="Event"
					/>
				</header>
				<table class="mt-4" id="rewards-table">
					<thead>
						<tr>
							<th class="w-2/3">Event</th>
							<th data-no-sort>Pack Type</th>
						</tr>
					</thead>
					<tbody>
						<TwitchEvent
							eventName="5 Gift Subs"
							id={TWITCH_GIFT_SUB_ID}
							defaultValue={giftSubPackType}
							packTypes={packTypes}
						/>
						{
							rewards.map((reward) => (
								<TwitchEvent
									eventName={`Reward: ${reward.eventName}`}
									id={reward.eventId}
									defaultValue={{
										packTypeId: reward.packTypeId,
										packTypeName: reward.packTypeName,
									}}
									packTypes={packTypes}
								/>
							))
						}
					</tbody>
				</table>
			</sort-table>
		</section>
		<RefreshTwitchEventsButton />
		<TwitchLoginButton />
	</form>
</Page>
