---
import Page from '@/layouts/Page.astro';
import { getCardInstanceById } from '@lil-indigestion-cards/core/lib/card';
import { getUser } from '@lil-indigestion-cards/core/lib/user';
import { routeNames, routes } from '@/constants';
import { Heading, PageTitle } from '@/components/text';
import Card from '@/components/cards/Card';
import PinCardToProfileButton from '@/components/cards/PinCardToProfileButton';
import AdminOnly from '@/components/AdminOnly.astro';

const session = Astro.locals.session;

const slug = Astro.params.instanceSlug;
if (!slug) {
	return Astro.redirect(routes.DESIGNS + '?alert=No instance route provided');
}
const [designId, instanceId] = slug.split('/');

if (!designId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No design id provided');
}
if (!instanceId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No instance id provided');
}

const instance = await getCardInstanceById({ designId, instanceId });
if (!instance) {
	return Astro.redirect(`${routes.DESIGNS}?alert=Card not found: ${instanceId}&type=error`);
}

if (!instance.openedAt && Astro.locals.session?.type !== 'admin') {
	return Astro.redirect(`${routes.DESIGNS}?alert=Card not found: ${instanceId}&type=error`);
}

const user = session?.properties.userId ? await getUser(session.properties.userId) : null;
const isPinned = user?.pinnedCard?.instanceId === instance.instanceId;

const isOwnedByCurrentUser =
	session?.properties.userId === instance.userId && session?.properties.userId;

const openDate = instance.openedAt
	? new Date(instance.openedAt).toLocaleString('en-US', {
			timeZone: 'America/New_York',
			month: 'long',
			day: 'numeric',
			year: 'numeric',
			hour: 'numeric',
			minute: 'numeric',
			timeZoneName: 'short',
	  })
	: 'Not opened yet';
---

<Page
	title={`${instance.cardName}, ${instance.rarityName} #${instance.cardNumber}`}
	class="flex flex-col gap-6"
	pageType="public"
	breadcrumbs={[
		{ label: routeNames.CARDS, href: routes.DESIGNS },
		{ label: instance.cardName, href: `${routes.DESIGNS}/${designId}` },
		{ label: `${instance.rarityName} #${instance.cardNumber}` },
	]}>
	<header class="flex flex-col items-center gap-4">
		<PageTitle>
			{instance.cardName}, {instance.rarityName} #{instance.cardNumber}
		</PageTitle>
		<div class="mx-4">
			<Card {...instance} client:load />
		</div>
	</header>
	{
		isOwnedByCurrentUser ? (
			<div class="mx-auto">
				<PinCardToProfileButton
					userId={session.properties.userId!}
					instanceId={instance.instanceId}
					designId={instance.designId}
					isPinned={isPinned}
					client:load
				/>
			</div>
		) : null
	}
	<section class="mx-auto text-lg">
		<Heading>Stats:</Heading>
		<p>
			<b>Rarity:{' '}</b>
			{instance.rarityName}
		</p>
		<p>
			<b>Card:{' '}</b>
			<a class="underline" href={`${routes.CARDS}/${instance.designId}`}
				>{instance.cardName}</a
			>
		</p>
		<p>
			<b>Card Number:{' '}</b>
			{instance.cardNumber}
		</p>
		<AdminOnly>
			<p>
				<b>Season:{' '}</b>
				<a class="underline" href={`${routes.SEASONS}/${instance.seasonId}`}
					>{instance.seasonName}</a
				>
			</p>
		</AdminOnly>
		<p>
			<b>Owner:{' '}</b>
			{
				instance.username ? (
					<a class="underline" href={`${routes.USERS}/${instance.username}`}>
						{instance.username}
					</a>
				) : (
					'None'
				)
			}
		</p>
		<p>
			<b>Minter:{' '}</b>
			{
				instance.minterUsername ? (
					<a class="underline" href={`${routes.USERS}/${instance.minterUsername}`}>
						{instance.minterUsername}
					</a>
				) : (
					'None'
				)
			}
		</p>
		<p>
			<b>Opened at:{' '}</b>
			{instance.openedAt ? <time datetime={openDate}>{openDate}</time> : 'Not opened yet'}
		</p>
	</section>
</Page>
