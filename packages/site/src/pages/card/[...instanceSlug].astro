---
import Page from '@/layouts/Page.astro';
import { getCardInstanceById } from '@lib/card';
import { getUser } from '@lib/user';
import { routeNames, routes } from '@/constants';
import CardPage from '@/layouts/CardPage.astro';
import { cachePage } from '@/lib/api';

const session = Astro.locals.session;

const slug = Astro.params.instanceSlug;
if (!slug) {
	return Astro.redirect(routes.DESIGNS + '?alert=No instance route provided');
}
const [designId, instanceId] = slug.split('/');

if (!designId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No design id provided');
}
if (!instanceId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No instance id provided');
}

const instance = await getCardInstanceById({ designId, instanceId });
if (!instance) {
	return Astro.redirect(`${routes.DESIGNS}?alert=Card not found: ${instanceId}&type=error`);
}

if (!instance.openedAt && Astro.locals.session?.type !== 'admin') {
	return Astro.redirect(`${routes.DESIGNS}?alert=Card not found: ${instanceId}&type=error`);
}

cachePage(Astro)
const user = session?.properties.userId ? await getUser(session.properties.userId) : null;
---

<Page
	title={`${instance.cardName}, ${instance.rarityName} #${instance.cardNumber}`}
	class="flex flex-col gap-6"
	pageType="public"
	breadcrumbs={[
		{ label: routeNames.CARDS, href: routes.DESIGNS },
		{ label: instance.cardName, href: `${routes.DESIGNS}/${designId}` },
		{ label: `${instance.rarityName} #${instance.cardNumber}` },
	]}>
	<CardPage card={instance} user={user ?? undefined} />
</Page>
