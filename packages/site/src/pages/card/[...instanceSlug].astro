---
import Page from '@/layouts/Page.astro';
import { getCardInstanceById } from '@lil-indigestion-cards/core/card';
import { routeNames, routes } from '@/constants';
import SubHeading from '@/components/text/SubHeading.astro';
import Card from '@/components/cards/Card';

const slug = Astro.params.instanceSlug;
if (!slug) {
	return Astro.redirect(routes.DESIGNS + '?alert=No instance route provided');
}
const [designId, instanceId] = slug.split('/');

if (!designId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No design id provided');
}
if (!instanceId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No instance id provided');
}

const instance = await getCardInstanceById({ designId, instanceId });

if (!instance) {
	return Astro.redirect(`${routes.DESIGNS}?error=No instance found with id ${instanceId}`);
}

const openDate = instance.openedAt
	? new Date(instance.openedAt).toLocaleString()
	: 'Not opened yet';
---

<Page
	title={`${instance.cardName}, ${instance.rarityName} #${instance.cardNumber}`}
	class="flex flex-col gap-9"
	breadcrumbs={[
		{ label: routeNames.CARDS, href: routes.DESIGNS },
		{ label: instance.cardName, href: `${routes.DESIGNS}/${designId}` },
		{ label: `${instance.rarityName} #${instance.cardNumber}` },
	]}>
	<header class="flex flex-col gap-4">
		<h1 class="font-display my-3 text-3xl italic">
			{instance.cardName}, {instance.rarityName} #{instance.cardNumber}
		</h1>
		<div class="mx-4">
			<Card {...instance} client:load />
		</div>
		{
			instance.cardDescription ? (
				<p class="max-w-sm  text-lg">{instance.cardDescription}</p>
			) : null
		}
	</header>
	<section class="text-lg">
		<SubHeading>Stats:</SubHeading>
		<p>
			<b>Rarity:</b>
			{instance.rarityName}
		</p>
		<p>
			<b>Card Number:</b>
			{instance.cardNumber}
		</p>
		<p>
			<b>Season:</b>
			<a href={`${routes.SEASONS}/${instance.seasonId}`}>{instance.seasonName}</a>
		</p>
		<p>
			<b>Owner</b>
			{
				instance.username ? (
					<a href={`${routes.USERS}/${instance.username}`}>{instance.username}</a>
				) : (
					'None'
				)
			}
		</p>
		<p>
			<b>Minter</b>
			{
				instance.minterUsername ? (
					<a href={`${routes.USERS}/${instance.minterUsername}`}>
						{instance.minterUsername}
					</a>
				) : (
					'None'
				)
			}
		</p>
		<p>
			<b>Opened at:</b>
			{instance.openedAt ? <time datetime={openDate}>{openDate}</time> : 'Not opened yet'}
		</p>
	</section>
</Page>
