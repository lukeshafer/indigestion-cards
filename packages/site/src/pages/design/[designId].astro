---
import Page from '@/layouts/Page.astro';
import Card from '@/components/Card.astro';
import CardList from '@/components/CardList.astro';
import { getCardDesignAndInstancesById } from '@lil-indigestion-cards/core/card';
import { getSiteConfig } from '@lil-indigestion-cards/core/site-config';
import { routes, api } from '@/constants';
import AdminOnly from '@/components/AdminOnly.astro';
import PageHeading from '@/components/text/PageHeading.astro';
import AdminDesignStats from '@/components/design/AdminDesignStats.astro';

const designId = Astro.params.designId;
const from = Astro.request.headers.get('referer');

if (!designId) {
	return Astro.redirect(routes.DESIGNS + '?alert=No design id provided');
}

const session = Astro.locals.session;
if (session?.type !== 'admin') throw new Error('Unauthorized');

const {
	cardDesigns: [design],
	cardInstances: instances,
} = await getCardDesignAndInstancesById({
	designId,
});

if (!design) {
	return Astro.redirect(`${routes.DESIGNS}?error=Design ${designId} not found`);
}

const { baseRarity } = await getSiteConfig();
const breadcrumbs = [{ label: 'Home', href: '/' }];

if (from?.includes('season')) {
	breadcrumbs.push(
		{ label: 'Seasons', href: routes.SEASONS },
		{ label: design.seasonName, href: `${routes.SEASONS}/${design.seasonId}` },
		{ label: design.cardName, href: `${routes.DESIGNS}/${designId}` }
	);
} else {
	breadcrumbs.push(
		{ label: 'Designs', href: routes.DESIGNS },
		{ label: design.cardName, href: `${routes.DESIGNS}/${designId}` }
	);
}

instances.sort((a, b) => (
	+a.totalOfType === +b.totalOfType 
		? a.instanceId !== b.instanceId
			? +a.instanceId - +b.instanceId
			: +a.cardNumber - +b.cardNumber
		: +a.totalOfType - +b.totalOfType
))
---

<Page
	title={`${design.cardName} - ${design.seasonName}`}
	class="flex flex-col gap-9"
	breadcrumbs={breadcrumbs}>
	<header class="flex flex-col items-center gap-4">
		<PageHeading>{design.cardName}</PageHeading>
		<Card
			rarityName={baseRarity.rarityId}
			designId={design.designId}
			frameUrl={baseRarity.frameUrl}
			imgUrl={design.imgUrl}
			cardName={design.cardName}
			cardDescription={design.cardDescription}
			cardNumber={1}
			totalOfType={1}
		/>
	</header>
	<AdminOnly>
		<details>
			<summary class="font-heading text-xl">Stats for Admins</summary>
			<AdminDesignStats {design} {instances} />
		</details>
		<button
			class="post-button relative w-max"
			title={instances.length ? 'Cannot delete card with instances' : 'Delete Card'}
			disabled={instances.length > 0}
			data-type="delete"
			hx-delete={api.DESIGN.DELETE}
			hx-confirm="Are you sure you want to delete this design?"
			hx-vals={JSON.stringify({
				designId: design.designId,
				imgUrl: design.imgUrl,
				cardName: design.cardName,
			})}>
			Delete Card
			<form-indicator>Deleting</form-indicator>
		</button>
	</AdminOnly>
	<section>
		<h2 class="sub-heading my-8 text-center">Instances</h2>
		<CardList cards={instances} />
	</section>
</Page>
