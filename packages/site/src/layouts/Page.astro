---
import Base, { type BaseProps } from './Base.astro';
import Breadcrumbs, { type Path } from '@/components/Breadcrumbs.astro';
import AdminOnly from '@/components/AdminOnly.astro';
import AdminPanel from '@/components/AdminPanel.astro';
import Header from '@/components/Header.astro';

export interface Props extends BaseProps {
	class?: string;
	breadcrumbs?: Path[];
}

const { class: className, breadcrumbs, ...baseProps } = Astro.props;
---

<Base {...baseProps}>
	<div
		class="page-layout grid h-[100svh] overflow-hidden"
		hx-swap="true transition:true"
		x-data="{}">
		<AdminOnly>
			<AdminPanel />
		</AdminOnly>
		<div class="relative overflow-y-scroll md:col-start-2" id="page-scroll-wrapper">
			<Header />
			<div
				class="sticky top-0"
				id="alert-wrapper"
				@displayalert.window={`\
					document.getElementById('page-scroll-wrapper')?.scrollTo({ top: 0, behavior: 'smooth' }); 
					message = $event.detail.message; 
					type = $event.detail.type`}
				x-data="{ message: undefined, type: undefined }"
				x-cloak>
				<template x-if="message">
					<div class="alert-text-box" :data-type="type ?? 'error'">
						<p x-text="message"></p>
						<button @click="message = undefined">x</button>
					</div>
				</template>
			</div>
			<div class="flex-1 max-w-main mx-auto">
				<Breadcrumbs path={breadcrumbs ?? []} />
			</div>
			<main
				class={(className ?? '') +
					' p-3 col-start-2 max-w-main mx-auto slide-it'}>
				<slot />
			</main>
		</div>
	</div>
</Base>

<style>
	.page-layout {
		grid-template-columns: max-content 1fr;
	}

	main {
		z-index: 0;
	}

	@media (max-width: 768px) {
		.page-layout {
			grid-template-columns: 1fr;
		}

		.toggle-btn {
			display: block;
			transform: translateX(calc(var(--isClosed) * 100%));
		}
	}
</style>
