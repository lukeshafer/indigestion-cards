---
import Base, { type BaseProps } from './Base.astro';
import Breadcrumbs, { type Path } from '@/components/Breadcrumbs.astro';
import AdminOnly from '@/components/AdminOnly.astro';
import AdminPanel from '@/components/AdminPanel.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/footer/Footer.astro';
import AlertBox from '@/components/AlertBox';
import { getSiteConfig } from '@lil-indigestion-cards/core/site-config';

export interface Props extends BaseProps {
	class?: string;
	breadcrumbs?: Path[];
	wide?: boolean;
}

const isAdmin = Astro.locals.session?.type === 'admin';
const alerts = isAdmin ? (await getSiteConfig())?.messages ?? [] : [];

{
	const alert = Astro.url.searchParams.get('alert');
	const alertType =
		Astro.url.searchParams.get('alertType') ||
		Astro.url.searchParams.get('alerttype') ||
		Astro.url.searchParams.get('type');
	if (alert) alerts.push({ type: alertType === 'error' ? 'error' : 'success', message: alert });
}

let { class: className, breadcrumbs, wide = false, ...baseProps } = Astro.props;
---

<Base {...baseProps}>
	<div class="page-layout grid h-[100svh] overflow-hidden" x-data="{}">
		<AdminOnly>
			<AdminPanel />
		</AdminOnly>
		<div
			class="relative flex flex-col overflow-y-scroll md:col-start-2"
			id="page-scroll-wrapper">
			<Header />
			<AlertBox client:load {alerts} />
			<div class="max-w-main mx-auto w-full">
				<Breadcrumbs path={breadcrumbs ?? []} />
			</div>
			<main
				class:list={{ 'max-w-main': !wide, [className ?? '']: true }}
				class="col-start-2 mx-auto w-full flex-1 p-3">
				<slot />
			</main>
			<Footer />
		</div>
	</div>
</Base>

<style>
	.page-layout {
		grid-template-columns: max-content 1fr;
	}

	main {
		z-index: 0;
	}

	@media (max-width: 768px) {
		.page-layout {
			grid-template-columns: 1fr;
		}

		.toggle-btn {
			display: block;
			transform: translateX(calc(var(--isClosed) * 100%));
		}
	}
</style>
