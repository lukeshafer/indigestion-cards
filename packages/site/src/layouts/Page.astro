---
import Base, { type BaseProps } from './Base.astro';
import Breadcrumbs, { type Path } from '@/components/Breadcrumbs';
import Header, { type Props as HeaderProps } from '@/components/Header.astro';
import Footer from '@/components/footer/Footer.astro';
import AlertBox from '@/components/AlertBox';
import { getSiteConfig } from '@lib/site-config';
import { Api } from 'sst/node/api';
import type { Alert } from '@/lib/client/state';
import LoadingBar from '@/components/LoadingBar';

export interface Props extends BaseProps {
	class?: string;
	breadcrumbs?: Path[];
	wide?: boolean;
	alerts?: Alert[];
	'no-header'?: boolean;
	'hide-breadcrumbs'?: boolean;
	logo?: HeaderProps['logo'];
}

const isAdmin = Astro.locals.session?.type === 'admin';
const alerts = isAdmin ? (await getSiteConfig())?.messages ?? [] : [];

{
	const alert = Astro.url.searchParams.get('alert');
	const alertType =
		Astro.url.searchParams.get('alertType') ||
		Astro.url.searchParams.get('alerttype') ||
		Astro.url.searchParams.get('type');
	if (alert) alerts.push({ type: alertType === 'error' ? 'error' : 'success', message: alert });
}

let {
	class: className,
	breadcrumbs,
	wide = false,
	'hide-breadcrumbs': hideBreadcrumbs,
	'no-header': noHeader = false,
	alerts: alertsProp,
	logo,
	...baseProps
} = Astro.props;

alerts.push(...(alertsProp ?? []));
---

<Base {...baseProps}>
	<div
		class="grid h-[100dvh] grid-cols-1 overflow-hidden md:grid-cols-[max-content_1fr]"
		id="page-layout-wrapper"
		data-api-url={Api.AdminApi.url}>
		<div
			class="relative flex flex-col overflow-y-scroll bg-gray-50 md:col-start-2 dark:bg-gray-950"
			id="page-scroll-wrapper">
			<LoadingBar client:load transition:persist transition:name="loadingbar" />
			{noHeader ? null : <Header {logo} />}
			<data-lists></data-lists>
			<AlertBox client:load {alerts} />
			{
				hideBreadcrumbs ? null : (
					<div class="max-w-main mx-auto w-full">
						<Breadcrumbs path={breadcrumbs ?? []} currentPath={Astro.url.pathname} />
					</div>
				)
			}
			<main
				transition:name={wide ? undefined : 'main'}
				class:list={{ 'max-w-main': !wide, [className ?? '']: true, 'p-3': !noHeader }}
				class="@container/main z-0 col-start-2 mx-auto mb-8 w-full flex-1">
				<slot />
			</main>
			<div id="card-preview"></div>
			<Footer />
		</div>
	</div>
	<script>
		// import custom elements
		import '../lib/client/elements/data-lists';
	</script>
</Base>

<style>
	@media (max-width: 768px) {
		.toggle-btn {
			display: block;
			transform: translateX(calc(var(--isClosed) * 100%));
		}
	}
</style>
