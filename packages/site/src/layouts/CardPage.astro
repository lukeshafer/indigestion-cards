---
import { routes } from '@site/constants';
import { Anchor, PageTitle } from '@site/components/text';
import { PreviewableCard, CardInstanceInfo } from '@site/components/cards/CardInstancePageElements';
import PinCardToProfileButton from '@site/components/cards/PinCardToProfileButton';
import CardTradeHistory from '@site/components/cards/CardTradeHistory.astro';
import type { CardInstance, User } from '@core/types';
import { checkIsCardTradeable } from '@core/lib/trades';

const session = Astro.locals.session;
const siteConfig = Astro.locals.siteConfig;

interface Props {
	card: CardInstance;
	user?: User;
}

const { card, user } = Astro.props;

const isPinned = user?.pinnedCard?.instanceId === card.instanceId;
const isOwnedByCurrentUser =
	session?.properties.userId === card.userId && session?.properties.userId;

---

<header class="flex flex-col items-center gap-4">
	<PageTitle>
		{card.cardName}, {card.rarityName} #{card.cardNumber}
	</PageTitle>
	<div class="mx-4">
		<PreviewableCard card={card} client:load />
	</div>
</header>
{
	isOwnedByCurrentUser ? (
		<div class="mx-auto">
			<PinCardToProfileButton
				userId={session.properties.userId!}
				instanceId={card.instanceId}
				designId={card.designId}
				isPinned={isPinned}
				client:load
			/>
		</div>
	) : checkIsCardTradeable(card) ? (
		<div class="mx-auto">
			<Anchor
				href={`${routes.TRADES}/new?receiverUsername=${card.username}&requestedCards=${card.instanceId}`}>
				Request Trade
			</Anchor>
		</div>
	) : null
}
<CardInstanceInfo card={card} />

{
	card.tradeHistory && siteConfig.tradingIsEnabled ? (
		<CardTradeHistory history={card.tradeHistory} />
	) : null
}
